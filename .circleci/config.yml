# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  do-build-linux-x86_64:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: rust:latest
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: building
          command: make build-release
      - persist_to_workspace:
          root: .
          paths:
            - target/*

  do-package:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: packaging
          command: make package TARGET=release 
      - run:
          name: saving version
          command: make version > .version
      - persist_to_workspace:
          root: .
          paths:
            - package/*
            - .version
              
  do-gh-release:
    docker:
      - image: cibuilds/github:latest
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: cat .version
      - run:
          name: publishing
          command: |
            VERSION=$(cat .version)
            ghr -t ${GITHUB_PERSONAL_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./package

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  release:
    jobs:
      - do-build-linux-x86_64
      - do-package:
          requires:
            - do-build-linux-x86_64
      - do-gh-release:
          requires:
            - do-build-linux-x86_64
            - do-package
